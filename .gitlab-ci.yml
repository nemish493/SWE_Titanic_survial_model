stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:dind

before_script:
  - docker info

build_backend:
  stage: build
  image: docker:latest
  script:
    - docker-compose build backend

build_frontend:
  stage: build
  image: docker:latest
  script:
    - docker-compose build frontend

backend_tests:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose up -d db
    - docker-compose up -d backend
    - sleep 10  # Wait for the backend to be fully up
    - docker-compose exec backend_service_container /bin/sh -c "pip install -r requirements.txt && pytest --junitxml=pytest-report.xml"
  artifacts:
    when: always
    reports:
      junit: backend/pytest-report.xml
    paths:
      - backend/pytest-report.xml

frontend_tests:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose up -d db
    - docker-compose up -d backend
    - docker-compose up -d frontend
    - sleep 20  # Wait for the frontend and backend to be fully up
    - docker-compose exec frontend_service_container /bin/sh -c "npm install && npx cypress run"
  artifacts:
    when: always
    paths:
      - vue-frontend/cypress/screenshots
      - vue-frontend/cypress/videos
